#.2429. Minimize XOR.
Given two positive integers num1 and num2, find the positive integer x such that:

x has the same number of set bits as num2, and
The value x XOR num1 is minimal.
Note that XOR is the bitwise XOR operation.

Return the integer x. The test cases are generated such that x is uniquely determined.

The number of set bits of an integer is the number of 1's in its binary representation.

class Solution {
    public int minimizeXor(int num1, int num2) {
        // Count the number of set bits in num2
        int setBitsNum2 = Integer.bitCount(num2);

        int x = 0;
        int setBits = 0;

        // Align set bits of x with num1
        for (int i = 31; i >= 0 && setBits < setBitsNum2; i--) {
            if ((num1 & (1 << i)) != 0) {
                x |= (1 << i); // Set the bit in x
                setBits++;
            }
        }

        // If num1 doesn't have enough set bits, set additional bits in x from LSB
        for (int i = 0; i <= 31 && setBits < setBitsNum2; i++) {
            if ((x & (1 << i)) == 0) { // Only set unset bits
                x |= (1 << i);
                setBits++;
            }
        }

        return x;
    }
}
